{"ast":null,"code":"var _jsxFileName = \"/Users/bhumika/Desktop/electrack-ui/src/RealTimeChart.js\";\n// import React, { useState, useEffect } from 'react';\n// import { Line } from '@ant-design/charts';\n// const DemoLine = () => {\n//     const [data, setData] = useState([]);\n//     useEffect(() => {\n//         asyncFetch();\n//     }, []);\n//     const asyncFetch = () => {\n//         fetch('http://localhost:8888/visualize-history')\n//             .then((response) => response.json())\n//             .then((json) => setData(json))\n//             .catch((error) => {\n//             console.log('fetch data failed', error);\n//         });\n//     };\n//     var config = {\n//         data: data,\n//         xField: 'date',\n//         yField: 'power',\n//         seriesField: 'category',\n//         xAxis: { type: 'time' },\n//         yAxis: {\n//             label: {\n//                 formatter: function formatter(v) {\n//                     return ''.concat(v).replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\n//                         return ''.concat(s, ',');\n//                     });\n//                 },\n//             },\n//         },\n//         color : [ '#1979C9'],\n//     };\n//     return <Line {...config}/>;\n// };\n// export default DemoLine;\nimport React, { useState, useEffect } from 'react';\nimport { Line } from '@ant-design/charts';\n\nconst DemoLine = () => {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    asyncFetch();\n  }, []);\n\n  const asyncFetch = () => {\n    fetch('http://localhost:8888/visualize-history').then(response => response.json()).then(json => setData(json)).catch(error => {\n      Console.log('Data failed FETCH', error);\n    });\n  };\n\n  var config = {\n    data: data,\n    padding: 'auto',\n    xField: 'power',\n    yField: 'date',\n    xAxis: {\n      tickCount: 5\n    },\n    smooth: true\n  };\n  return /*#__PURE__*/React.createElement(Line, Object.assign({}, config, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }\n  }));\n};\n\nexport default DemoLine;","map":{"version":3,"sources":["/Users/bhumika/Desktop/electrack-ui/src/RealTimeChart.js"],"names":["React","useState","useEffect","Line","DemoLine","data","setData","asyncFetch","fetch","then","response","json","catch","error","Console","log","config","padding","xField","yField","xAxis","tickCount","smooth"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,oBAArB;;AAEA,MAAMC,QAAQ,GAAG,MAAO;AACtB,QAAM,CAAEC,IAAF,EAASC,OAAT,IAAqBL,QAAQ,CAAG,EAAH,CAAnC;AACAC,EAAAA,SAAS,CAAG,MAAO;AACjBK,IAAAA,UAAU;AACX,GAFQ,EAEL,EAFK,CAAT;;AAGA,QAAMA,UAAU,GAAG,MAAO;AACxBC,IAAAA,KAAK,CAAG,yCAAH,CAAL,CACIC,IADJ,CACaC,QAAF,IAAgBA,QAAQ,CAAGC,IAAX,EAD3B,EAEIF,IAFJ,CAEaE,IAAF,IAAYL,OAAO,CAAGK,IAAH,CAF9B,EAGIC,KAHJ,CAGcC,KAAF,IAAa;AACrBC,MAAAA,OAAO,CAAGC,GAAV,CAAgB,mBAAhB,EAAsCF,KAAtC;AACD,KALH;AAMD,GAPD;;AAQA,MAAIG,MAAM,GAAG;AACXX,IAAAA,IAAI,EAAGA,IADI;AAEXY,IAAAA,OAAO,EAAG,MAFC;AAGXC,IAAAA,MAAM,EAAG,OAHE;AAIXC,IAAAA,MAAM,EAAG,MAJE;AAKXC,IAAAA,KAAK,EAAG;AAAEC,MAAAA,SAAS,EAAG;AAAd,KALG;AAMXC,IAAAA,MAAM,EAAG;AANE,GAAb;AAQA,sBAAO,oBAAE,IAAF,oBAAaN,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAtBD;;AAwBA,eAAeZ,QAAf","sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { Line } from '@ant-design/charts';\n// const DemoLine = () => {\n//     const [data, setData] = useState([]);\n//     useEffect(() => {\n//         asyncFetch();\n//     }, []);\n//     const asyncFetch = () => {\n//         fetch('http://localhost:8888/visualize-history')\n//             .then((response) => response.json())\n//             .then((json) => setData(json))\n//             .catch((error) => {\n//             console.log('fetch data failed', error);\n//         });\n//     };\n//     var config = {\n//         data: data,\n//         xField: 'date',\n//         yField: 'power',\n//         seriesField: 'category',\n//         xAxis: { type: 'time' },\n//         yAxis: {\n//             label: {\n//                 formatter: function formatter(v) {\n//                     return ''.concat(v).replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\n//                         return ''.concat(s, ',');\n//                     });\n//                 },\n//             },\n//         },\n//         color : [ '#1979C9'],\n//     };\n//     return <Line {...config}/>;\n// };\n// export default DemoLine;\n\nimport React, { useState, useEffect } from 'react';\nimport { Line } from '@ant-design/charts' ;     \n\nconst DemoLine = ( ) => {      \n  const [ data , setData ] = useState ( [ ] ) ;   \n  useEffect ( ( ) => {  \n    asyncFetch ( ) ;\n  } , [ ] ) ; \n  const asyncFetch = ( ) => {     \n    fetch ( 'http://localhost:8888/visualize-history' )\n      . then ( ( response ) => response . json ( ) ) \n      . then ( ( json ) => setData ( json ) )  \n      . catch ( ( error ) => {  \n        Console . log ( 'Data failed FETCH' , error ) ;\n      } ) ;\n  } ;\n  var config = { \n    data : data ,\n    padding : 'auto' , \n    xField : 'power' , \n    yField : 'date' , \n    xAxis : { tickCount : 5 } ,   \n    smooth : true , \n  } ;\n  return < Line { ... config } /> ;   \n} ;\n\nexport default DemoLine ;  "]},"metadata":{},"sourceType":"module"}