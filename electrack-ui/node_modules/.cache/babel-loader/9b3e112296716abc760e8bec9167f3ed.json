{"ast":null,"code":"var _jsxFileName = \"/Users/bhumika/Desktop/College/FYP/electrack-ui/src/Forecast.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Line } from '@ant-design/charts';\nimport forecasted from './data/forecast.json';\n\nconst DemoLine = () => {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    asyncFetch();\n  }, []);\n\n  const asyncFetch = () => {\n    fetch(forecasted).then(response => response.json()).then(json => setData(json)).catch(error => {\n      console.log('fetch data failed', error);\n    });\n  };\n\n  var config = {\n    data: data,\n    padding: 'auto',\n    xField: 'day',\n    yField: 'value',\n    xAxis: {\n      tickCount: 5\n    }\n  };\n  return /*#__PURE__*/React.createElement(Line, Object.assign({}, config, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }\n  }));\n};\n\nexport default DemoLine;","map":{"version":3,"sources":["/Users/bhumika/Desktop/College/FYP/electrack-ui/src/Forecast.js"],"names":["React","useState","useEffect","Line","forecasted","DemoLine","data","setData","asyncFetch","fetch","then","response","json","catch","error","console","log","config","padding","xField","yField","xAxis","tickCount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMA,UAAU,GAAG,MAAM;AACrBC,IAAAA,KAAK,CAACL,UAAD,CAAL,CACKM,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEWE,IAAD,IAAUL,OAAO,CAACK,IAAD,CAF3B,EAGKC,KAHL,CAGYC,KAAD,IAAW;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,KAAjC;AACH,KALD;AAMH,GAPD;;AAQA,MAAIG,MAAM,GAAG;AACTX,IAAAA,IAAI,EAAEA,IADG;AAETY,IAAAA,OAAO,EAAE,MAFA;AAGTC,IAAAA,MAAM,EAAE,KAHC;AAITC,IAAAA,MAAM,EAAE,OAJC;AAKTC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb;AALE,GAAb;AAOA,sBAAO,oBAAC,IAAD,oBAAUL,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH,CArBD;;AAsBA,eAAeZ,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from '@ant-design/charts';\nimport forecasted from './data/forecast.json';\n\nconst DemoLine = () => {\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        asyncFetch();\n    }, []);\n    const asyncFetch = () => {\n        fetch(forecasted)\n            .then((response) => response.json())\n            .then((json) => setData(json))\n            .catch((error) => {\n            console.log('fetch data failed', error);\n        });\n    };\n    var config = {\n        data: data,\n        padding: 'auto',\n        xField: 'day',\n        yField: 'value',\n        xAxis: { tickCount: 5 },\n    };\n    return <Line {...config}/>;\n};\nexport default DemoLine;\n"]},"metadata":{},"sourceType":"module"}