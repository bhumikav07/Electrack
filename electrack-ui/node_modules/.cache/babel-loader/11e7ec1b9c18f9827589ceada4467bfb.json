{"ast":null,"code":"var _jsxFileName = \"/Users/bhumika/Desktop/electrack-ui/src/RealTimeChart.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Line } from '@ant-design/charts';\n\nconst DemoLine = () => {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    asyncFetch();\n  }, []);\n\n  const asyncFetch = () => {\n    fetch('https://gw.alipayobjects.com/os/bmw-prod/55424a73-7cb8-4f79-b60d-3ab627ac5698.json').then(response => response.json()).then(json => setData(json)).catch(error => {\n      console.log('fetch data failed', error);\n    });\n  };\n\n  var config = {\n    data: data,\n    xField: 'year',\n    yField: 'value',\n    seriesField: 'category',\n    xAxis: {\n      type: 'time'\n    },\n    yAxis: {\n      label: {\n        formatter: function formatter(v) {\n          return ''.concat(v).replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\n            return ''.concat(s, ',');\n          });\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(Line, Object.assign({}, config, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }\n  }));\n};\n\nexport default DemoLine;","map":{"version":3,"sources":["/Users/bhumika/Desktop/electrack-ui/src/RealTimeChart.js"],"names":["React","useState","useEffect","Line","DemoLine","data","setData","asyncFetch","fetch","then","response","json","catch","error","console","log","config","xField","yField","seriesField","xAxis","type","yAxis","label","formatter","v","concat","replace","s"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,oBAArB;;AACA,MAAMC,QAAQ,GAAG,MAAM;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMA,UAAU,GAAG,MAAM;AACrBC,IAAAA,KAAK,CAAC,oFAAD,CAAL,CACKC,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEWE,IAAD,IAAUL,OAAO,CAACK,IAAD,CAF3B,EAGKC,KAHL,CAGYC,KAAD,IAAW;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,KAAjC;AACH,KALD;AAMH,GAPD;;AAQA,MAAIG,MAAM,GAAG;AACTX,IAAAA,IAAI,EAAEA,IADG;AAETY,IAAAA,MAAM,EAAE,MAFC;AAGTC,IAAAA,MAAM,EAAE,OAHC;AAITC,IAAAA,WAAW,EAAE,UAJJ;AAKTC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KALE;AAMTC,IAAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAE;AACHC,QAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBC,CAAnB,EAAsB;AAC7B,iBAAO,GAAGC,MAAH,CAAUD,CAAV,EAAaE,OAAb,CAAqB,uBAArB,EAA8C,UAAUC,CAAV,EAAa;AAC9D,mBAAO,GAAGF,MAAH,CAAUE,CAAV,EAAa,GAAb,CAAP;AACH,WAFM,CAAP;AAGH;AALE;AADJ;AANE,GAAb;AAgBA,sBAAO,oBAAC,IAAD,oBAAUZ,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH,CA9BD;;AA+BA,eAAeZ,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from '@ant-design/charts';\nconst DemoLine = () => {\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        asyncFetch();\n    }, []);\n    const asyncFetch = () => {\n        fetch('https://gw.alipayobjects.com/os/bmw-prod/55424a73-7cb8-4f79-b60d-3ab627ac5698.json')\n            .then((response) => response.json())\n            .then((json) => setData(json))\n            .catch((error) => {\n            console.log('fetch data failed', error);\n        });\n    };\n    var config = {\n        data: data,\n        xField: 'year',\n        yField: 'value',\n        seriesField: 'category',\n        xAxis: { type: 'time' },\n        yAxis: {\n            label: {\n                formatter: function formatter(v) {\n                    return ''.concat(v).replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\n                        return ''.concat(s, ',');\n                    });\n                },\n            },\n        },\n    };\n    return <Line {...config}/>;\n};\nexport default DemoLine;"]},"metadata":{},"sourceType":"module"}